swagger: '2.0'
info:
  title: ERP API
  version: "1.0"
paths:
  /auth:
    post:
      operationId: auth.login
      summary: Authentification endpoint
      tags: 
      - public
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            login:
              type: string
            password:
              type: string
      responses:
        200:
          description: Ok
          schema:
            type: object
            properties:
              X-User-Token:
                type: string
        401:
          description: Unauthorized
  /reset:
    post:
      operationId: auth.reset
      tags: 
      - public
      summary: Reset password
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              login:
                type: string
      responses:
        200:
          description: Ok
  /identity:
    get:
      operationId: identity.search
      tags: 
      - private
      summary: Get User's identity data
      parameters: 
      - $ref: "#/parameters/UserToken"
      responses:
        200:
          description: Ok
          schema:
            $ref: "#/definitions/Identity"
        401:
          description: Unauthorized
    put:
      operationId: identity.put
      tags:
      - private
      summary: Update User's identity data
      parameters: 
      - $ref: "#/parameters/UserToken"
      - in: body
        name: body
        schema:
          $ref: '#/definitions/IdentityPost'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/Identity'
  /identity/account:
    post:
      operationId: account.post
      tags:
      - private
      summary: Create and account
      parameters: 
      - $ref: '#/parameters/UserToken'
      - in: body
        name: body
        schema:
          $ref: '#/definitions/AccountPost'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Account'
        401:
          description: Unauthorized
  /identity/account/{id}:
    get:
      operationId: account.get
      tags: 
      - private
      summary: Get account data
      parameters: 
      - $ref: '#/parameters/Id'
      - $ref: '#/parameters/UserToken'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/Account'
    put:
      operationId: account.put
      tags: 
      - private
      summary: Update an account
      parameters: 
      - $ref: '#/parameters/Id'
      - $ref: '#/parameters/UserToken'
      - in: body
        name: body
        schema:
          $ref: '#/definitions/AccountPost'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/Account'
        401:
          description: Unauthorized
    delete:
      operationId: account.delete
      tags: 
      - private
      summary: Delete an account
      parameters: 
      - $ref: '#/parameters/Id'
      - $ref: '#/parameters/UserToken'
      responses:
        204:
          description: No Content
        401:
          description: Unauthorized
  /customers:
    get:
      operationId: customer.search
      tags:
      - private
      summary: Get list of customers
      parameters:
      - $ref: '#/parameters/UserToken'
      responses:
        200:
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
    post:
      operationId: customer.post
      tags: 
      - private
      summary: Create an customer
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CustomerPost'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Customer'
        401:
          description: Unauthorized
  /customer/{id}:
    get:
      operationId: customer.get
      tags:
      - private
      summary: Get Customer
      parameters: 
      - $ref: '#/parameters/Id'
      - $ref: '#/parameters/UserToken'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/Customer'
        401:
          description: Unauthorized
    put:
      operationId: customer.put
      tags:
      - private
      summary: Update Customer
      parameters: 
      - $ref: '#/parameters/Id'
      - $ref: '#/parameters/UserToken'
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CustomerPost'
      responses:
        200:
          description: Created
          schema:
            $ref: '#/definitions/Customer'
        401:
          description: Unauthorized
    delete:
      operationId: customer.delete
      tags:
      - private
      summary: Delete Customer
      parameters:
      - $ref: '#/parameters/Id'
      - $ref: '#/parameters/UserToken'
      responses:
        204:
          description: No Content
        401:
          description: Unauthorized
  /hostings:
    get:
      operationId: hosting.search
      tags:
      - private
      summary: Get Hosting accounts
      parameters:
      - $ref: '#/parameters/Id'
      - $ref: '#/parameters/UserToken'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/Hosting'
    post:
      operationId: hosting.post
      tags: 
      - private
      summary: Create a hosting
      parameters:
      - $ref: '#/parameters/UserToken'
      - in: body
        name: body
        schema:
          $ref: '#/definitions/HostingPost'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Hosting'
        401:
          description: Unauthorized
  /hosting/{id}:
    get:
      operationId: hosting.get
      tags:
      - private
      summary: Get Hosting
      parameters: 
      - $ref: '#/parameters/Id'
      - $ref: '#/parameters/UserToken'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/Hosting'
        401:
          description: Unauthorized
    put:
      operationId: hosting.put
      tags:
      - private
      summary: Update Hosting
      parameters: 
      - $ref: '#/parameters/Id'
      - $ref: '#/parameters/UserToken'
      - in: body
        name: body
        schema:
          $ref: '#/definitions/HostingPost'
      responses:
        200:
          description: Created
          schema:
            $ref: '#/definitions/Hosting'
        401:
          description: Unauthorized
    delete:
      operationId: hosting.delete
      tags:
      - private
      summary: Disable Hosting
      parameters:
      - $ref: '#/parameters/Id'
      - $ref: '#/parameters/UserToken'
      responses:
        204:
          description: No Content
        401:
          description: Unauthorized
  /docs:
    get:
      operationId: doc.search
      tags:
      - private
      summary: Get list of invoices and acts
      parameters:
      - $ref: '#/parameters/UserToken'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/Doc'
        401:
          description: Unauthorized
    post:
      operationId: doc.post
      tags:
      - private
      summary: Create a doc
      parameters:
      - $ref: '#/parameters/UserToken'
      - in: body
        name: body
        schema:
          $ref: '#/definitions/DocPost'
      responses:
        201:
          description: Ok
          schema:
            $ref: '#/definitions/Doc'
        401:
          description: Unauthorized
  /doc/{id}:
    put:
      operationId: doc.put
      tags:
      - private
      summary: Update a document
      parameters:
      - $ref: '#/parameters/Id'
      - $ref: '#/parameters/UserToken'
      - in: body
        name: body
        schema:
          $ref: '#/definitions/DocPost'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/Doc'
        401:
          description: Unauthorized

parameters:
  UserToken:
    in: header
    name: X-User-Token
    type: string
  Id:
    in: path
    name: id
    required: true
    type: string
definitions:
  AccountPost:
    type: object
    properties:
      title:
        type: string
      account:
        type: string
      mfo:
        type: string
      isDefault:
        type: boolean
      currency:
        type: string
  Account:
    allOf:
      - type: object
        properties:
          id: 
            type: string
      - $ref: '#/definitions/AccountPost'

  IdentityPost:
    type: object
    required: 
    - email
    properties:
      email:
        type: string
        format: email
      firstname:
        type: string
      lastName:
        type: string
      title:
        type: string
      inn:
        type: integer
      phone: 
        type: string
      address: 
        type: string
  Identity:
    allOf:
      - type: object
        properties:
          id:
            type: string
          accounts:
            type: array
            items: 
              $ref: "#/definitions/Account"
      - $ref: "#/definitions/IdentityPost"
  CustomerPost:
    type: object
    required: 
    - title
    properties:
      title:
        type: string
      contact:
        type: string
      email:
        type: string
      phone:
        type: string
      notes:
        type: string
      createdAt: 
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  Customer:
    allOf:
    - type: object
      properties:
        id:
          type: string
    - $ref: '#/definitions/CustomerPost'
  HostingPost:
    type: object
    required:
    - domain
    properties:
      validTo:
        type: string
        format: date-time
      domain:
        type: string
      account:
        type: string
      onlyHosting:
        type: boolean
      onlyDomain:
        type: boolean
      space:
        type: string
      notes:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  Hosting:
    allOf:
    - type: object
      properties:
        id:
          type: string
    - $ref: '#/definitions/HostingPost'
  DocItemPost:
    type: object
    required:
    - job
    - units
    - price
    properties:
      job: 
        type: string
      units:
        type: integer
      price:
        type: number
        format: decimal
  DocItem:
    allOf:
    - type: object
      properties:
        id:
          type: string
    - $ref: '#/definitions/DocItemPost'
  DocPost:
    type: object
    required:
    - num
    properties:
      dateOf:
        type: string
        format: date-time
      actOf:
        type: string
        format: date-time
      isInvoiced:
        type: boolean
      isActed:
        type: boolean
      num:
        type: integer
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  Doc:
    allOf:
    - type: object
      properties:
        id: 
          type: string
        items:
          type: array
          items:
            $ref: '#/definitions/DocItem'
        customer:
          $ref: '#/definitions/Customer'
        hosting:
          $ref: '#/definitions/Hosting'
        account:
          $ref: '#/definitions/Account'
    - $ref: '#/definitions/DocPost'